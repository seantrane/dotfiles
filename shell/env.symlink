#!/usr/bin/env bash
#
# SHELL ENV
#
# This file contains presets, variables, helpers and functions
# for all shell environments and scripts.
#
# It is meant to be loaded as a default environment configuration.
# That means all contents will be available to:
#   * interactive and non-interactive shells
#   * login and non-login shells
#   * shell scripts, etc.
#
# You should put environment-specific the following (required) files,
# and read the instructions therein for best practices:
#   * Bash: `~/.bashrc`
#   * Zshell: `~/.zshenv`
#
# NOTE: These files are loaded in an optimal order.

#-----------------------------------------------------------------------
# `$DOTFILES` = path to `~/.dotfiles` directory
#-----------------------------------------------------------------------
# This file should be loaded first in `~/.bashrc` and `~/.zshenv`
# This will ensure that all scripts and prompts will have access
# to some standard variables.
# Set this to the location of the dotfiles directory
# (default = `~/.dotfiles`)

export DOTFILES="$HOME/.dotfiles"

#-----------------------------------------------------------------------
# Shell Environment
#-----------------------------------------------------------------------
# This file provides standard configuration for all shell environments.
#   * Response Helpers
#   * Paths
#   * Exports
#   * Functions
#   * System Variables

# `$DOTSHELL` = path to `~/.dotfiles/shell` directory
export DOTSHELL="$DOTFILES/shell"


# Shell Response Text/Colors/Helpers
# shellcheck disable=SC1090
[[ "${SWITCH:-}" != "\033[" ]] && . "$DOTSHELL/response.sh"

# Shell PATHs
# shellcheck disable=SC1090
. "$DOTSHELL/paths.sh"

# Shell Exports
# shellcheck disable=SC1090
. "$DOTSHELL/exports.sh"

# Shell Functions
# shellcheck disable=SC1090
. "$DOTSHELL/functions.sh"

#-----------------------------------------------------------------------
# SYSTEM VARIABLES
#-----------------------------------------------------------------------

type "lowercase" &> /dev/null && [[ -z "$UTYPE" ]] && UTYPE=$(lowercase "$OSTYPE") && export UTYPE
type "lowercase" &> /dev/null && [[ -z "$UNAME" ]] && UNAME=$(lowercase "$UNAME") && export UNAME
[[ -z "$UTYPE" ]] && UTYPE="$OSTYPE" && export UTYPE
[[ -z "$UNAME" ]] && UNAME=$(uname) && export UNAME
[[ -z "$UREL" ]] && UREL=$(uname -r) && export UREL
[[ -z "$UARCH" ]] && UARCH=$(uname -p) && export UARCH
[[ -z "$UMACH" ]] && UMACH=$(uname -m) && export UMACH
