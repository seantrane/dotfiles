#!/usr/bin/env bash
#
# Run all dotfiles installers.

DOTFILES_ROOT=$( cd "${BASH_SOURCE%/*}/.." && pwd )

# Install all other dot-packages
# find the installers and run them iteratively
for file in $(find -H "$DOTFILES_ROOT" -maxdepth 2 -name 'install.sh'); do
    source $file
done
unset file

#-----------------------------------------------------------------------
# OS-specific Installs
#-----------------------------------------------------------------------

if [[ "$OSTYPE" == "freebsd"* ]]; then

  : # FreeBSD

elif [[ "$OSTYPE" == "linux-gnu" ]]; then

  : # Linux

  if type "apt-get" &> /dev/null; then

    : # Debian or Ubuntu:

  elif type "yum" &> /dev/null; then

    : # Fedora, CentOS or Red Hat:

  else

    : # Unknown Linux OS

  fi

elif [[ "$OSTYPE" == "darwin"* ]]; then

  : # macOS (Darwin)

  # Install macOS apps (homebrew casks)
  [[ -s "$DOTFILES_ROOT/macos/install-casks.sh" ]] && source $DOTFILES_ROOT/macos/install-casks.sh

  # Remove outdated versions from the cellar.
  brew cleanup

  # Set macOS defaults
  [[ -s "$DOTFILES_ROOT/macos/set-defaults.sh" ]] && source $DOTFILES_ROOT/macos/set-defaults.sh

  # Set macOS app prefs
  # This should only be run once Apps/Casks have been installed.
  [[ -s "$DOTFILES_ROOT/macos/set-prefs.sh" ]] && source $DOTFILES_ROOT/macos/set-prefs.sh

  # sh_info "installing dependencies"
  # if source bin/dot > /tmp/dotfiles-dot 2>&1; then
  #   sh_success "dependencies installed"
  # else
  #   sh_fail "error installing dependencies"
  # fi

elif [[ "$OSTYPE" == "cygwin" ]]; then

  : # POSIX compatibility layer and Linux environment emulation for Windows

elif [[ "$OSTYPE" == "msys" ]]; then

  : # Lightweight shell and GNU utilities compiled for Windows (part of MinGW)

elif [[ "$OSTYPE" == "win32" ]]; then

  : # Windows (32-bit) (...this may not work...)

else

  : # Unknown OS

fi
