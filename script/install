#!/usr/bin/env bash
#
# Run all dotfiles installers.
# shellcheck disable=SC1090,SC1091

[[ ! -d "${DOTFILES:-}" ]] && DOTFILES=$(cd "${BASH_SOURCE%/*}/.." && pwd)

type "find_files" &>/dev/null || . "$DOTFILES/functions/find_files"

# Install all other dot-packages
# find the installers and run them iteratively
for _file in $(find_files "$DOTFILES" 'install.sh' 2); do
  . "$_file"
done

# Homebrew installs
if type "brew" &>/dev/null; then
  # Sadly, many dependecies cannot be installed by Homebrew Bundle
  # because there is "... (no bottle for Apple Silicon)".
  # However, in most cases, `brew install [formula]` does work.
  # There is no workaround for this except to install manually.
  # When there are finally "bottles for Apple Silicon",
  # the workaround below can be refactored accordingly.
  brew install \
    bash \
    curl \
    gcc \
    libzip \
    git \
    git-lfs \
    curl \
    pv \
    node \
    ;
  # Install deps/apps using Brewfile (Homebrew Bundle)
  if [[ -r "$HOME/.Brewfile" ]]; then
    (
      cd && brew bundle --global --file "$HOME/.Brewfile"
      brew bundle check
    )
  fi
  # Remove outdated versions from the cellar.
  brew cleanup
fi

# Node.js/npm installs
if type "npm" &>/dev/null; then
  npm install -g \
    cucumber \
    serverless \
    yo \
    ;
  npm cache clean -g -f
fi

# Ruby/Bundler installs
if type "bundle" &>/dev/null && [[ -r "$HOME/.Gemfile" ]]; then
  (cd && bundle install --gemfile="$HOME/.Gemfile")
fi

#-------------------------------------------------------------------------------
# OS-specific Installs
#-------------------------------------------------------------------------------

if [[ "$OSTYPE" == "freebsd"* ]]; then

  : # FreeBSD

elif [[ "$OSTYPE" == "linux-gnu" ]]; then

  : # Linux

  if type "apt-get" &>/dev/null; then

    : # Debian or Ubuntu:

  elif type "yum" &>/dev/null; then

    : # Fedora, CentOS or Red Hat:

    # Install Extra Packages for Enterprise Linux (EPEL)
    # There are repository rpm packages for RHEL5, RHEL6 and RHEL7.
    # The repository package installs the repo details on your local system for yum or up2date to use.
    # Then you can install packages with your usual method, and the EPEL repository is included.
    # https://fedoraproject.org/wiki/EPEL/FAQ#How_can_I_install_the_packages_from_the_EPEL_software_repository.3F
    su -c 'rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm'

  else

    : # Unknown Linux OS

  fi

elif [[ "$OSTYPE" == "darwin"* ]]; then

  : # macOS (Darwin)

  # Set macOS defaults
  # This should only be run once Apps/Casks have been installed.
  [[ -s "$DOTFILES/macos/set-defaults.sh" ]] && . "$DOTFILES/macos/set-defaults.sh"

  # sh_info "installing dependencies"
  # if source bin/dot > /tmp/dotfiles-dot 2>&1; then
  #   sh_success "dependencies installed"
  # else
  #   sh_fail "error installing dependencies"
  # fi

elif [[ "$OSTYPE" == "cygwin" ]]; then

  : # POSIX compatibility layer and Linux environment emulation for Windows

elif [[ "$OSTYPE" == "msys" ]]; then

  : # Lightweight shell and GNU utilities compiled for Windows (part of MinGW)

elif [[ "$OSTYPE" == "win32" ]]; then

  : # Windows (32-bit) (...this may not work...)

else

  : # Unknown OS

fi
