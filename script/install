#!/usr/bin/env bash
#
# Run all dotfiles installers.

DOTFILES_ROOT=$( cd "${BASH_SOURCE%/*}/.." && pwd )

# Install all other dot-packages
# find the installers and run them iteratively
_find_files_array=($(find -H "$DOTFILES" -maxdepth 2 -perm -u+r -type f -name 'install.sh'))
for _file_path in "${_find_files_array[@]}"; do
  . $_file_path
done
unset _file_path _find_files_array

# Run before Ruby Gem installs
# . "$DOTFILES/ruby/gem-update.sh"
# Run after Ruby Gem installs
# . "$DOTFILES/ruby/rehash.sh"

#-----------------------------------------------------------------------
# OS-specific Installs
#-----------------------------------------------------------------------

if [[ "$OSTYPE" == "freebsd"* ]]; then

  : # FreeBSD

elif [[ "$OSTYPE" == "linux-gnu" ]]; then

  : # Linux

  if type "apt-get" &> /dev/null; then

    : # Debian or Ubuntu:

  elif type "yum" &> /dev/null; then

    : # Fedora, CentOS or Red Hat:

    # Install Extra Packages for Enterprise Linux (EPEL)
    # There are repository rpm packages for RHEL5, RHEL6 and RHEL7.
    # The repository package installs the repo details on your local system for yum or up2date to use.
    # Then you can install packages with your usual method, and the EPEL repository is included.
    # https://fedoraproject.org/wiki/EPEL/FAQ#How_can_I_install_the_packages_from_the_EPEL_software_repository.3F
    su -c 'rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm'

  else

    : # Unknown Linux OS

  fi

elif [[ "$OSTYPE" == "darwin"* ]]; then

  : # macOS (Darwin)

  # Homebrew installs
  if type "brew" &> /dev/null; then
    # Install deps/apps using Brewfile
    if [[ -r "$HOME/.Brewfile" ]]; then
      export HOMEBREW_BUNDLE_FILE="$HOME/.Brewfile"
      brew bundle install --global
      brew bundle check
    fi
    # Remove outdated versions from the cellar.
    brew cleanup
  fi

  # Node.js/npm installs
  if type "npm" &> /dev/null; then
    npm install -g \
      cucumber \
      less \
      serverless \
      yo \
      ;
  fi

  # Ruby/Bundler installs
  if type "bundle" &> /dev/null && [[ -r "$HOME/.Gemfile" ]]; then
    (cd; bundle install --gemfile="$HOME/.Gemfile")
  fi

  # Set macOS defaults
  [[ -s "$DOTFILES_ROOT/macos/set-defaults.sh" ]] && source $DOTFILES_ROOT/macos/set-defaults.sh

  # Set macOS app prefs
  # This should only be run once Apps/Casks have been installed.
  [[ -s "$DOTFILES_ROOT/macos/set-prefs.sh" ]] && source $DOTFILES_ROOT/macos/set-prefs.sh

  # sh_info "installing dependencies"
  # if source bin/dot > /tmp/dotfiles-dot 2>&1; then
  #   sh_success "dependencies installed"
  # else
  #   sh_fail "error installing dependencies"
  # fi

elif [[ "$OSTYPE" == "cygwin" ]]; then

  : # POSIX compatibility layer and Linux environment emulation for Windows

elif [[ "$OSTYPE" == "msys" ]]; then

  : # Lightweight shell and GNU utilities compiled for Windows (part of MinGW)

elif [[ "$OSTYPE" == "win32" ]]; then

  : # Windows (32-bit) (...this may not work...)

else

  : # Unknown OS

fi
