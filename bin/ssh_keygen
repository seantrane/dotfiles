#!/usr/bin/env bash
#
# Generate SSH keys for host and guest machines.
# https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent
# https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account

_git_user_email="$(git config user.email)"
_git_config_path="$HOME/.ssh/config"
_git_config_shared_path="$HOME/.ssh/config_shared"
_git_config_prefix="Host github.com
  IgnoreUnknown UseKeychain
  AddKeysToAgent yes
"

# Generate keys, if they do not already exist.
[[ ! -e "$HOME/.ssh/id_ed25519" ]] && ssh-keygen -t ed25519 -C "$_git_user_email" -f "$HOME/.ssh/id_ed25519" -N ""
[[ ! -e "$HOME/.ssh/id_rsa" ]] && ssh-keygen -t rsa -b 4096 -C "$_git_user_email" -f "$HOME/.ssh/id_rsa" -N ""
[[ ! -e "$HOME/.ssh/id_rsa_shared" ]] && ssh-keygen -t rsa -b 4096 -C "$_git_user_email" -f "$HOME/.ssh/id_rsa_shared" -N ""

# Create user ssh-config file.
if [[ ! -e "$_git_config_path" ]] || ! grep -q github "$_git_config_path"; then
  touch "$_git_config_path"
  echo "${_git_config_prefix}  IdentityFile ~/.ssh/id_ed25519" >>"$_git_config_path"
fi

# Create shareable ssh-config file (for sharing designated SSH key into containers).
if [[ ! -e "$_git_config_shared_path" ]] || ! grep -q github "$_git_config_shared_path"; then
  touch "$_git_config_shared_path"
  echo "${_git_config_prefix}  IdentityFile /root/.ssh/id_rsa_shared" >>"$_git_config_shared_path"
fi

# Add the SSH key to SSH client.
ssh-add "$HOME/.ssh/id_ed25519"

# Copy the SSH public key to clipboard, add to accounts.
echo "Add the following SSH public keys to your GitHub Account."
echo "(see: https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account#adding-a-new-ssh-key-to-your-account)"

echo -e "\\n'id_ed25519.pub':\\n"
cat "$HOME/.ssh/id_ed25519.pub"

echo -e "\\n'id_rsa_shared.pub':\\n"
cat "$HOME/.ssh/id_rsa_shared.pub"

unset _git_user_email _git_config_path _git_config_shared_path
