#
# ZSH ENV
#
# Defines Zshell environment.
#
# There are five startup files that zsh will read commands from:
#   * $ZDOTDIR/.zshenv
#   * $ZDOTDIR/.zprofile
#   * $ZDOTDIR/.zshrc
#   * $ZDOTDIR/.zlogin
#   * $ZDOTDIR/.zlogout
#
# If ZDOTDIR is not set, then the value of HOME is used; this is the usual case.
# `.zshenv' is sourced on all invocations of the shell, unless the -f option is set.
# It should contain commands to set the command search path,
# plus other important environment variables.
# `.zshenv' should not contain commands that produce output
# or assume the shell is attached to a tty.
#
# `.zshrc' is sourced in interactive shells. It should contain commands
# to set up aliases, functions, options, key bindings, etc.
#
# `.zlogin' is sourced in login shells. It should contain commands that
# should be executed only in login shells. `.zlogout' is sourced when
# login shells exit. `.zprofile' is similar to `.zlogin', except that
# it is sourced before `.zshrc'. `.zprofile' is meant as an alternative
# to `.zlogin' for ksh fans; the two are not intended to be used together,
# although this could certainly be done if desired.
#
# `.zlogin' is not the place for alias definitions, options,
# environment variable settings, etc.; as a general rule, it should not
# change the shell environment at all. Rather, it should be used to
# set the terminal type and run a series of external commands (fortune, msgs, etc).
#
# See table below for processing information.
#
# Zsh executes A, then B, then C, etc.
# +----------------+-----------+-----------+------+
# |                |Interactive|Interactive|Script|
# |                |login      |non-login  |      |
# +----------------+-----------+-----------+------+
# |/etc/zshenv     |    A      |    A      |  A   |
# +----------------+-----------+-----------+------+
# |~/.zshenv       |    B      |    B      |  B   |
# +----------------+-----------+-----------+------+
# |/etc/zprofile   |    C      |           |      |
# +----------------+-----------+-----------+------+
# |~/.zprofile     |    D      |           |      |
# +----------------+-----------+-----------+------+
# |/etc/zshrc      |    E      |    C      |      |
# +----------------+-----------+-----------+------+
# |~/.zshrc        |    F      |    D      |      |
# +----------------+-----------+-----------+------+
# |/etc/zlogin     |    G      |           |      |
# +----------------+-----------+-----------+------+
# |~/.zlogin       |    H      |           |      |
# +----------------+-----------+-----------+------+
# +----------------+-----------+-----------+------+
# |~/.zlogout      |    I      |           |      |
# +----------------+-----------+-----------+------+
# |/etc/zlogout    |    J      |           |      |
# +----------------+-----------+-----------+------+
#
# Moral: Put stuff in `~/.zshenv`, which is always executed.
# HOWEVER: Some config may be overwritten by `/etc/zshrc`. So,
# you have to put some config in `~/.zshrc` (e.g., prompt config).
#
# Use the Conditional Sections as needed:
#   1. SCRIPT / NON-INTERACTIVE / .zshenv
#   2. INTERACTIVE / PROMPT / .zshrc
#   3. LOGIN / .zprofile / .zlogin
#   4. NON-LOGIN / .zprofile
#
# NOTE: This is different from how Bash is processed (see `~/.bashrc`).
#
# shellcheck disable=SC1090,SC1091

_SHELL_TYPE="prompt"
_SHELL_USER="public"
[[ "$SHLVL" -eq 1 && ! -o LOGIN ]] && _SHELL_TYPE="script"
[[ -o LOGIN ]] && _SHELL_TYPE="private"
[[ "$_SHELL_TYPE" = "prompt" ]] && echo "$SHELL::$_SHELL_TYPE-$_SHELL_USER"

#-----------------------------------------------------------------------
# Ensure that non-login/non-interactive shell has a defined environment.
#-----------------------------------------------------------------------

if [[ "$SHLVL" -eq 1 && ! -o LOGIN && -s "${ZDOTDIR:-$HOME}/.zprofile" ]]; then
  . "${ZDOTDIR:-$HOME}/.zprofile"
fi

#-----------------------------------------------------------------------
# Load `.env` a.k.a. `~/.dotfiles/shell/env.symlink`
#-----------------------------------------------------------------------
# This file should be loaded first in all shell environments,
# in the following files; `~/.bashrc` and `~/.zshenv`

[[ -f "${ZDOTDIR:-$HOME}/.env" ]] && . "${ZDOTDIR:-$HOME}/.env"


########################################################################
########################################################################
##
##  GENERAL CONFIGURATION
##  (stuff that you always want executed)
##
########################################################################
########################################################################

# autoload every function:
# for file in ~/.dotfiles/functions/{extract,link_file}; do
# _find_files_array=($(find -H "$DOTFILES/functions" -maxdepth 2 -perm -u+r -type f -name '[A-Za-z0-9\-\_]*'))
# for _file_path in ${_find_files_array}; do
#   . "$_file_path"
# done
# unset _file_path _find_files_array

# shellcheck disable=SC2206
fpath=("$DOTFILES"/functions $fpath)
autoload +X sh_alert sh_error sh_fail sh_info sh_note sh_success sh_text sh_user sh_yesno

# PATH="$PATH:$DOTFILES/functions"
# fpath="$DOTFILES/functions:$fpath"

# for d in $fpath; do
#   autoload `ls $d`
# done

# autoload `ls "$DOTFILES/functions"`

# . "$DOTFILES/zsh/fpath.zsh"
# . "$DOTFILES/zsh/config.zsh"


#-----------------------------------------------------------------------
# PATHS
#-----------------------------------------------------------------------

# Set the the list of directories that cd searches.
# cdpath=(
#   $cdpath
# )

# Set the list of directories that Zsh searches for programs.
# path=(
#   $(brew --prefix)/{bin,sbin}
#   $path
# )

# Ensure path arrays do not contain duplicates.
# typeset -gU cdpath fpath mailpath path

#-----------------------------------------------------------------------
# Temporary Files
#-----------------------------------------------------------------------

if [[ ! -d "$TMPDIR" ]]; then
  export TMPDIR="/tmp/$LOGNAME"
  # shellcheck disable=SC2174
  mkdir -p -m 700 "$TMPDIR"
fi

TMPPREFIX="${TMPDIR%/}/zsh"; export TMPPREFIX


########################################################################
##  THE END: GENERAL CONFIGURATION
########################################################################
